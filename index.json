[{"content":" A little piece of insight into this mans brain, hopefully your IQ doesn\u0026rsquo;t drop too much after reading these. ","date":null,"permalink":"/posts/","section":"Blog","summary":"A little piece of insight into this mans brain, hopefully your IQ doesn\u0026rsquo;t drop too much after reading these.","title":"Blog"},{"content":"","date":null,"permalink":"/","section":"Home","summary":"","title":"Home"},{"content":"Go seems like the perfect language for Lambdas; simple, concise, and compiled. I don’t offer money-back guarantees around here, but getting this up and running is as quick as removing the open-source license from software that people have built companies on.\nNot aimed at anyone in particular, especially someone who\u0026rsquo;s just sold to IBM. Let\u0026rsquo;s get into it.\nStep 1: Prep Your Go Code #First things first, let\u0026rsquo;s get your Go function ready. Create a new file named main.go in your project directory.\nmain.go:\npackage main import ( \u0026#34;github.com/aws/aws-lambda-go/lambda\u0026#34; \u0026#34;log\u0026#34; ) func handler() error { log.Println(\u0026#34;Hello from Lambda!\u0026#34;) return nil } func main() { lambda.Start(handler) } This function does nothing more than log a message, but it’s a good start. Next steps:\n# mac skill issue inbound GOOS=linux # compile go build -o bootstrap main.go zip function.zip bootstrap Step 2: Set the Stage with Terraform #Personally I like to create a directory in my project called .terraform/ but feel free to use your base directory in the project. You’ll want a few files to manage this setup properly: main.tf, variables.tf, lambda.tf, eventbridge.tf.\nmain.tf\nterraform { required_version = \u0026#34;\u0026gt;= 0.14\u0026#34; required_providers { aws = { source = \u0026#34;hashicorp/aws\u0026#34; version = \u0026#34;\u0026gt;= 3.0\u0026#34; } } } provider \u0026#34;aws\u0026#34; { region = var.region } data \u0026#34;aws_caller_identity\u0026#34; \u0026#34;current\u0026#34; {} data \u0026#34;aws_region\u0026#34; \u0026#34;current\u0026#34; {} variables.tf Declare your essentials here.\nvariable \u0026#34;region\u0026#34; { description = \u0026#34;AWS region to deploy resources\u0026#34; type = string default = \u0026#34;eu-west-2\u0026#34; } variable \u0026#34;function_name\u0026#34; { description = \u0026#34;Name of our lambda function\u0026#34; type = string default = \u0026#34;getting-started-with-lambda\u0026#34; } variable \u0026#34;lambda_role_name\u0026#34; { description = \u0026#34;IAM role name for our Lambda function\u0026#34; type = string default = \u0026#34;go-lambda-role\u0026#34; } variable \u0026#34;lambda_memory_size\u0026#34; { description = \u0026#34;Memory allocated for the Lambda function\u0026#34; type = number default = 128 } variable \u0026#34;lambda_timeout\u0026#34; { description = \u0026#34;Timeout in seconds for the Lambda function\u0026#34; type = number default = 3 } variable \u0026#34;event_rule_name\u0026#34; { description = \u0026#34;Name for the EventBridge rule\u0026#34; type = string default = \u0026#34;go-lambda-every-minute\u0026#34; } variable \u0026#34;event_description\u0026#34; { description = \u0026#34;Description of what the EventBridge rule does\u0026#34; type = string default = \u0026#34;Fires every minute\u0026#34; } variable \u0026#34;event_schedule_expression\u0026#34; { description = \u0026#34;Schedule expression for the EventBridge rule\u0026#34; type = string default = \u0026#34;rate(1 minute)\u0026#34; } iam.tf Define your IAM role that the Lambda will use.\nlocals { account_id = data.aws_caller_identity.current.account_id } resource \u0026#34;aws_iam_role\u0026#34; \u0026#34;go_lambda_role\u0026#34; { name = var.lambda_role_name assume_role_policy = jsonencode({ \u0026#34;Version\u0026#34; : \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34; : [ { \u0026#34;Action\u0026#34; : \u0026#34;sts:AssumeRole\u0026#34;, \u0026#34;Principal\u0026#34; : { \u0026#34;Service\u0026#34; : \u0026#34;lambda.amazonaws.com\u0026#34; }, \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34; } ] }) inline_policy { name = \u0026#34;go-lambda-policies\u0026#34; policy = jsonencode({ \u0026#34;Version\u0026#34; : \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34; : [ { \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34; : \u0026#34;logs:CreateLogGroup\u0026#34;, \u0026#34;Resource\u0026#34; : \u0026#34;arn:aws:logs:${data.aws_region.current.name}:${local.account_id}:*\u0026#34; }, { \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34; : [ \u0026#34;logs:CreateLogStream\u0026#34;, \u0026#34;logs:PutLogEvents\u0026#34; ], \u0026#34;Resource\u0026#34; : [ \u0026#34;arn:aws:logs:${data.aws_region.current.name}:${local.account_id}:log-group:/aws/lambda/*:*\u0026#34; ] } ] }) } } lambda.tf Here’s where the magic happens. Define your Lambda function resource.\nresource \u0026#34;aws_lambda_function\u0026#34; \u0026#34;go_lambda_function\u0026#34; { function_name = var.function_name role = aws_iam_role.go_lambda_role.arn package_type = \u0026#34;Zip\u0026#34; handler = \u0026#34;bootstrap\u0026#34; runtime = \u0026#34;provided.al2023\u0026#34; # This will need changing if you don\u0026#39;t create a subdirectory for terraform filename = \u0026#34;../function.zip\u0026#34; source_code_hash = filebase64sha256(\u0026#34;../function.zip\u0026#34;) depends_on = [ aws_iam_role.go_lambda_role ] tags = { Name = \u0026#34;Go Lambda Example\u0026#34; } } resource \u0026#34;aws_lambda_permission\u0026#34; \u0026#34;allow_cloudwatch_to_call_split_lambda\u0026#34; { statement_id = \u0026#34;AllowExecutionFromCloudWatch\u0026#34; action = \u0026#34;lambda:InvokeFunction\u0026#34; function_name = aws_lambda_function.go_lambda_function.function_name principal = \u0026#34;events.amazonaws.com\u0026#34; source_arn = aws_cloudwatch_event_rule.go_lambda_every_minute.arn } eventbridge.tf Set up the event bridge to run your lambda function on a one minute schedule.\nresource \u0026#34;aws_cloudwatch_event_rule\u0026#34; \u0026#34;go_lambda_every_minute\u0026#34; { name = var.event_rule_name description = var.event_description schedule_expression = var.event_schedule_expression } resource \u0026#34;aws_cloudwatch_event_target\u0026#34; \u0026#34;trigger_lambda_on_schedule\u0026#34; { rule = aws_cloudwatch_event_rule.go_lambda_every_minute.name target_id = \u0026#34;lambda\u0026#34; arn = aws_lambda_function.go_lambda_function.arn } Step 3: Deploy #Firstly you will need to initalize your terraform in the repository. terraform init\nand you will then need to plan and apply\nterraform plan # review the above after running terraform apply # select yes when happy to apply \u0026amp; deploy Step 4: Check the logs! #You should now be able to view the lambda function being triggered under the cloud watch log group we created.\n","date":"27 April 2024","permalink":"/posts/create-a-go-lambda-function-with-terraform/","section":"Blog","summary":"Go seems like the perfect language for Lambdas; simple, concise, and compiled.","title":"Speedrunning creating a go lambda function with terraform"},{"content":"AI isn\u0026rsquo;t taking our jobs anytime soon, Devin certainly isn\u0026rsquo;t. I\u0026rsquo;d love to see Devin attend all of those agile ceremonies and use Jira!\nIf AI isn\u0026rsquo;t taking our current jobs, how will it affect our future job prospects? My primary concern with AI isn\u0026rsquo;t the technology itself, but rather how it\u0026rsquo;s being utilized. I\u0026rsquo;m not going to get into the security of these tools, which is defintely questionable, or even how they are being used to cause an upsurge in bug bounties. I\u0026rsquo;m also not going to directly talk about copilot (but it is included when speaking generally about AI tools as a whole), as I wrote too much originally on it and decided that topic is worth it\u0026rsquo;s own post.\nThis is going to be about how it directly effects a developer. More specifically a developer who is a solution copier.\nWho Are Solution Copiers? #Firstly, it\u0026rsquo;s not someone who just uses so happens to use copy and paste. Sometimes that\u0026rsquo;s required in our line of work. It is however, someone who only copies solutions.\nMore specifically, a solution copier:\nBlindly copies and pastes a variety of snippets found in their existing codebase, Stack Overflow, or now from LLMs. Does not understand the code they use; they may recognize words or symbols but can\u0026rsquo;t explain the code\u0026rsquo;s function under technical questioning. Lacks and does not apply problem-solving skills. I\u0026rsquo;m not claiming I\u0026rsquo;ve never been in this situation. In fact, I\u0026rsquo;d argue that most, if not all, developers probably start this way, especially those transitioning directly from an educational setting to the workplace.\nFor example, projects at university have deadlines, like most students I would put them off and then try to complete them in a silly time frame we\u0026rsquo;d created for ourselves. Who misses university ey.\nHow do you do meet those deadlines? Well, you know what the problem is, so you search for ways to implement the solution. Eventually, you find some code that works, you incorporate it into your project, and move on to the next issue. You might not understand every detail of your code, but your project works.\nOver time, you\u0026rsquo;re likely to face challenges that can\u0026rsquo;t be solved with a quick online search. Whether it\u0026rsquo;s a colleague or lecturer questioning your methods, or simply a problem that has no easy answers online, these challenges push you to research and understand the solutions you implement, or even better if you then create a better solution based on this experience.\nYou start building habits of browsing documentation, reading how things work, going that extra step to figure the problem out \u0026amp; overcome it. You stop being a Solution Copier.\nYou progress, learn and develop.\nHow AI Can Hinder Your Progress #These AI tools take this away, they have an answer for everything with 100% confidence. You don\u0026rsquo;t have to overcome these hurdles, you aren\u0026rsquo;t forced to think about the problem and what is the best solution? You are just given an answer.\nIt\u0026rsquo;s akin to searching on Stack Overflow and hoping for a relevant solution. Even there, you\u0026rsquo;re likely to find multiple answers, each with its own reasoning and context, requiring you to adapt and understand how a given solution fits your specific problem.\nThis interaction, even if minor, helps to foster learning habits.\nHowever, AI Tools are like stack overflow on steroids. They make those interactions none existent, they allow you to skip any siutation which requires logical thinking.\nNot only are you not developing \u0026amp; honing these skills, but you start to lose those critical thinking skills. When you start typing and it it just automatically suggests an entire function, you skim over it and bingo, problem solved \u0026amp; nothing learned.\nThat is my main point gripe, I\u0026rsquo;ve seen countless people get lost in accepting the confidence of these AI tools. Their answers, whilst derived from somewhere, can be as incorrect as anything else you\u0026rsquo;d find on a forum. Just be mindful on how you use these tools \u0026amp; not lose what makes you a developer.\nThat Doesn\u0026rsquo;t Mean You Should Ignore Good Tools #I like to end on positive notes, so it\u0026rsquo;s worth noting that AI tools can be incredibly useful. They don\u0026rsquo;t need to be ignored, just used with caution.\nFor example, I\u0026rsquo;ve used ChatGPT and OpenAI\u0026rsquo;s API to draft a more detailed skeleton for my notes, which I have highlighted in a previous post. When I have time later, I would then vet these notes and remove any incorrect points \u0026amp; add additional notes upon research.\nMost of these tools have a lot of benefits, anyone who have used them will have at least once been impressed by an answer you wouldn\u0026rsquo;t have expected. Their great tools afterall, but their just that. They should help you fill knowledge gaps in, do mundane tasks, offer starting points, etc. They shouldn\u0026rsquo;t be taking in an entire file, ask to rewrite and add a feature, pasting it into your editor and shipping it. You still need to understand what is going on.\nIt\u0026rsquo;s also a good rubber duck!\n","date":"7 April 2024","permalink":"/posts/ai-isnt-taking-your-job-yet/","section":"Blog","summary":"AI isn\u0026rsquo;t taking our jobs anytime soon, Devin certainly isn\u0026rsquo;t.","title":"AI isn't going to take your job just yet but could cost you future ones"},{"content":"The lack of vertical spacing to be exact.\nLike everything related to readability, you might argue it\u0026rsquo;s a skill issue. Which I can accept, whilst shedding a tear, but that\u0026rsquo;s a topic for another day though.\nThe cognitive load theory suggests that our working memory has a limited capacity for processing new information. When code is densely packed without clear visual breaks, it increases the cognitive load on developers trying to understand the code.\nLogically grouping code by relating variables or patterns help build this mind map of how the code is working subconciously. By doing this and separating unrelated sections, developers can better understand the relationships and dependencies within the code.\nWithout realizing it, we start to process the code and its functions by visualizing it in one way or another. Not having clear breakpoints for closely related items slows this process. Vertical spacing reduces the cognitive effort required to parse and understand the code. It highlights the structure, making it less overwhelming for both new and experienced developers.\nIt\u0026rsquo;s like a reading a book, you need paragraphs to group sentences and clearly break from the next set of ideas.\nThis example is only 18 lines long, so not a great example, but I feel it helps explain what I\u0026rsquo;m trying to get across.\n// No Spacing func init() { configDir, err := os.UserConfigDir() viper.SetConfigName(\u0026#34;config\u0026#34;) viper.SetConfigType(\u0026#34;toml\u0026#34;) viper.AddConfigPath(fmt.Sprintf(\u0026#34;%s/quicknote-ai\u0026#34;, configDir)) err = viper.ReadInConfig() if err != nil { fmt.Println(\u0026#34;Errored reading config:\u0026#34;, err) return } if !viper.IsSet(\u0026#34;openai_api_key\u0026#34;) { fmt.Println(\u0026#34;Please add your openai_api_key to the config\u0026#34;) return } client := \u0026amp;http.Client{} aiService = ai.NewOpenAIService(viper.GetString(\u0026#34;openai_api_key\u0026#34;), client) noteCmd.Flags().StringVarP(\u0026amp;thought, \u0026#34;thought\u0026#34;, \u0026#34;t\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;No thoughts wise guy?\u0026#34;) noteCmd.MarkFlagRequired(\u0026#34;thought\u0026#34;) noteCmd.Flags().StringVarP(\u0026amp;model, \u0026#34;model\u0026#34;, \u0026#34;m\u0026#34;, \u0026#34;gpt-3.5-turbo\u0026#34;, \u0026#34;Fancy a specific model?\u0026#34;) rootCmd.AddCommand(noteCmd) } // Spacing func init() { configDir, err := os.UserConfigDir() if err != nil { fmt.Println(\u0026#34;Error getting config directory:\u0026#34;, err) return } viper.SetConfigName(\u0026#34;config\u0026#34;) viper.SetConfigType(\u0026#34;toml\u0026#34;) viper.AddConfigPath(fmt.Sprintf(\u0026#34;%s/quicknote-ai\u0026#34;, configDir)) err = viper.ReadInConfig() if err != nil { fmt.Println(\u0026#34;Errored reading config:\u0026#34;, err) return } if !viper.IsSet(\u0026#34;openai_api_key\u0026#34;) { fmt.Println(\u0026#34;Please add your openai_api_key to the config\u0026#34;) return } client := \u0026amp;http.Client{} aiService = ai.NewOpenAIService(viper.GetString(\u0026#34;openai_api_key\u0026#34;), client) noteCmd.Flags().StringVarP(\u0026amp;thought, \u0026#34;thought\u0026#34;, \u0026#34;t\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;No thoughts wise guy?\u0026#34;) noteCmd.MarkFlagRequired(\u0026#34;thought\u0026#34;) noteCmd.Flags().StringVarP(\u0026amp;model, \u0026#34;model\u0026#34;, \u0026#34;m\u0026#34;, \u0026#34;gpt-3.5-turbo\u0026#34;, \u0026#34;Fancy a specific model?\u0026#34;) rootCmd.AddCommand(noteCmd) } There\u0026rsquo;s a practical article with multiple examples in python of this in an article I\u0026rsquo;ve often referred people too in the past here, it\u0026rsquo;s a good read.\n","date":"24 March 2024","permalink":"/posts/vertical-spacing-the-unwritten-rule/","section":"Blog","summary":"The lack of vertical spacing to be exact.","title":"Vertical Spacing \u0026 Reducing Cognitive Load"},{"content":"I\u0026rsquo;ve spent the last couple of days dabbling in Go. To provide some context, I quite like the concept of building a \u0026lsquo;second brain\u0026rsquo; through documentation and notes \u0026amp; have been doing so for over a year. So, I decided to build a small CLI tool that generates a note in a predefined structure using the OpenAI API, based on the \u0026rsquo;thought\u0026rsquo; that comes into my head.\nThis idea stems from:\nThe desire to not have to leave my normal workflow in the terminal. The elimination of context switching. It\u0026rsquo;s not perfect, but it serves as a solid starting block. Plus, it\u0026rsquo;s been fun to mess around in a language I don\u0026rsquo;t use too often! ","date":"17 March 2024","permalink":"/posts/dabbling-in-go-cli/","section":"Blog","summary":"I\u0026rsquo;ve spent the last couple of days dabbling in Go.","title":"Quick trip into being a Gopher!"},{"content":"Use Stow for Your Dotfiles. Please. #Ever since I took an interest in dotfiles (I\u0026rsquo;m looking at you emacs \u0026amp; awesome wm) and their magical ability to configure applications and tweak each little setting to my liking, I\u0026rsquo;ve been hooked. I spend more time configuring these tools than using them, in the true developer way.\nHowever, I always ran into one issue: I have multiple drives for different distros (and a consistent ability to break my machine) and have never found a great way to manage my config files.\nIt\u0026rsquo;s funny because its true. I always had slightly different configs based on the machine I was on, due to the nature of tweaking as I go. Well, not anymore! Stow is incredible. I\u0026rsquo;ve been using it for a while now, and it\u0026rsquo;s made my life much easier.\nWell, What is Stow? # Stow is a powerful symlink farm manager that simplifies the task of managing and deploying software packages, especially useful for handling dotfiles across multiple machines.\nAs described by themselves:\nIt takes distinct packages of software and/or data located in separate directories on the filesystem and makes them appear to be installed in the same place.\nEssentially, you can control any file in your home directory, including dotfiles, from within one directory. Think of all the clutter you remove! You can just focus on the files you want to maintain and move around.\nFor example My dotfiles repo is just my zshrc, alacritty, tmux \u0026amp; neovim configs, as an editors note here feel free to send me neovim configs / plugin recommendations as I\u0026rsquo;m updating mine currently.\nI use these on 3 different machines though, I don\u0026rsquo;t care about moving anything else over other than those configs. This allows me to remove the overhead of everything else in your .config which comes with your system of choice.\nCouple this with using Git to store all of your config files, and you can easily manage them all in one repository/directory. It\u0026rsquo;s bliss.\nSo, let\u0026rsquo;s get into setting it up!\nGuide #Step 1: Git and Stow #First things first: make sure you\u0026rsquo;ve got Git and Stow installed. Installing Stow is as easy as whispering sweet nothings into your terminal:\nsudo apt-get install stow # For Debian/Ubuntu brew install stow # For the macOS crowd, I believe And Git, well, if you haven\u0026rsquo;t got Git, I\u0026rsquo;m surprised you found this article.\nStep 2: Quick Setup #Kick things off by creating a dedicated Git repository for your dotfiles.\nmkdir ~/dotfiles cd ~/dotfiles git init Think of this new folder as your home directory, so you want to replicate its structure within the folder.\nIf you have your Alacritty config at\n~/.config/alacritty/alacritty.toml\nthen it should be the same, i.e.\n~/dotfiles/.config/alacritty/alacritty.toml.\nStep 3: Stow Away Your Treasures #While there are other methods, I found the easiest way was to move the configs I needed using something like mv to my dotfiles repository and then using stow .. This command sym-links your files back to their original locations in your dotfiles repository.\nStep 4: Commit to Git! #Now they\u0026rsquo;re all being managed in a non-hidden directory. Cool, but you don\u0026rsquo;t get the full benefit of this until you add Git into the mix. Pushing them to a remote repository means that no matter where you are, or how many times you\u0026rsquo;ve reinvented your machine, your personalised setup is just a few commands away.\ngit add . git commit -m \u0026#34;Behold, my dotfiles!\u0026#34; git remote add origin \u0026lt;remote-repository-url\u0026gt; git push -u origin master Now, if you make a change in ~/.config/alacritty/alacritty.toml, then when you go back to your dotfiles repo, you will see (with a good ole git status) that you can commit and manage those files with version control. This also lets you pull in any config changes from other machines at any time or revert your changes after breaking them!\nConclusion #I love Stow, and in tandem with Git, this is my preffered toolkit for managing dotfiles across multiple machines and systems. It provides a straightforward, reliable method to ensure your environment is always just the way you like it, no matter where you find yourself.\nIt\u0026rsquo;s easy, and it works. What more can you ask for?\nThanks for reading, hope you enjoyed!\nWant to know more? # Incredible video \u0026amp; aeshtetically pleasing video by Dreams of Autonomoy Stows Website previously linked Article I found searching for memes on dotfiles ","date":"3 March 2024","permalink":"/posts/using-stow/","section":"Blog","summary":"Use Stow for Your Dotfiles.","title":"Stow - Manage your dotfiles with ease"},{"content":"I\u0026rsquo;ve now been a professional developer for longer than I was at University. #Now that depressing statement is out of the way, I actually have some reflections \u0026amp; insights on those years I\u0026rsquo;d like to jot down.\nAlthough, before I go on, there\u0026rsquo;s an Albert Einstein quote I\u0026rsquo;ve recently read \u0026amp; it rings very true.\n\u0026ldquo;The more I learn, the more I realise how much I don\u0026rsquo;t know.\u0026rdquo;\nIn the last 5 years, I\u0026rsquo;ve worked for two companies who couldn\u0026rsquo;t be further from each other in retrospect. I won\u0026rsquo;t go too much into it but my first job had 7 developers when I joined \u0026amp; the second had 70+. That being said it was one of the main reasons for me switching companies. I wanted to see the difference in organisation\u0026rsquo;s, the way the software teams work, the technology. Truth be told I\u0026rsquo;ve had great experiences from both \u0026amp; as you can tell, learnt quite a lot! often the hard way.\nTake a step back when explaining your work #Anytime I think of advice given to me in my career this is the by far the first thing that comes to my mind. Very early into my career I was given one piece of advice.\n\u0026ldquo;Everyone can write code, what will get you far is being able to explain the technical to the non-technical.\u0026rdquo;\nShout out James Ball\nAt the time, I was definitely confused by this. Everyone can code???\nThough as time passed it started to make more sense. People could complete tickets but when it came to explaining that work to shareholders, or product owner\u0026rsquo;s with questions, they wouldn\u0026rsquo;t be able to translate from the depths of the code to the reality of day to day use of said software.\nThey more than likely don\u0026rsquo;t know or even more likely don\u0026rsquo;t care how you\u0026rsquo;ve produced the goods, they just want a working product. You need to be able to explain to them, how things work, why development is going well, why it\u0026rsquo;s going bad \u0026amp; often estimating how long something will take.\nYou\u0026rsquo;re a programmer not a copywriter #Programming is fundamentally about solving problems.\nI think in the ever growing world of AI this is just as important as ever, although in the growing world of AI this post may not be relevant in 5 years. Critical thinking \u0026amp; problem solving are the most important skills in being a software developer in my opinion, if you quantify them they\u0026rsquo;d be required on every CV.\nCopying code from ChatGPT, Stack Overflow, anywhere else without understanding what it does is just a recipe for disaster. You\u0026rsquo;re just trying to shove anything in to stop the leak, instead of thinking about the best way to solve the leak.\nI\u0026rsquo;ll draw on experience to help paint the picture, a month or two into my first job I was working on a type of integration into the platform that had been done over 10 times before. So it was a very simple structure to follow, I followed an example, wrote my tests, plugged in the new API connection, worked on transforming the data back into our data structure. All going swimmingly, right?\nWell I ran into an issue.\nI spent 2 days trying to get my tests to work or CLI run of the local integration to work but to no luck. I looked over every example I could find trying to see where I differed. I eventually spoke to my colleague who asked me \u0026ldquo;Have you followed the error?\u0026rdquo;, I replied \u0026ldquo;of course I have\u0026rdquo;, explained how it takes me to this line but all the other integrations use that so it can\u0026rsquo;t be that. It was that.\nHe then clicked through to the abstract that everything was using \u0026amp; proceeded to start debugging. I sat there looking at this abstract logic like it was magic. He started to explain to me where it was going wrong \u0026amp; where to look. That\u0026rsquo;s when I found out, it wasn\u0026rsquo;t possible in the current system.\nTrying to understand the magic is where you truly start to figure out what\u0026rsquo;s going on, nothing magically works in software. In my case the system wasn\u0026rsquo;t built to handle whatever I was trying to do. I had to solve the problem that was in front of me, this new integration required a solution to the problem that I had to develop. I\u0026rsquo;d willingly bet my first solution was probably not what we went with, but it\u0026rsquo;s much easier to understand the solution when your being steered in the right direction rather than dealing with more magic.\nPull Request comments aren\u0026rsquo;t a negative thing. #How terrifying, not only have you done something wrong but everyone can publicly see that you\u0026rsquo;ve done something wrong. You might as well hand in your notice!\nCommments aren\u0026rsquo;t a negative, its feedback. #Firstly, a comment isn\u0026rsquo;t always to condemn. In recent months more than ever I leave comments on pull requests at work to understand the logic being applied. I want to understand why specific logic is being applied in places, It\u0026rsquo;s a conversation. You have comment sections \u0026amp; discussions on most social media platforms, I\u0026rsquo;m not saying post your life story on github but they can be conversations.\nOn the flip side, be mindful of the tone of comments. In the age of teams \u0026amp; remote working, gauging the tone of a comment is hard. For example, saying \u0026ldquo;Good approach however, have you considered X?\u0026rdquo; instead of \u0026ldquo;Why didn\u0026rsquo;t you do X?\u0026rdquo;, or \u0026ldquo;Do X.\u0026rdquo; without any resource or explanation on why that should be implemented, these can make a big difference I\u0026rsquo;ve found.\nFeedback Fatigue. # Would you rather spend one extra day working on resolutions of bugs/edge cases someone may have spotted or move your ticket to done \u0026amp; then spend the next sprint on bug tickets for said issue? The number of comments don\u0026rsquo;t matter at the end of the day, once it\u0026rsquo;s merged, who even remembers? Don\u0026rsquo;t worry about it.\nHowever I will say one thing on this as Feedback Fatigue is a real thing unfortunately, not everything needs to be under such a microscope to the point of blocking a PR. I actually stumbelled upon a Reaction to an article about a guy who\u0026rsquo;s team resented him for blocking prs for \u0026ldquo;nits\u0026rdquo;.\nTurning it back positive to sign off #I\u0026rsquo;ve just laid out some learnings I\u0026rsquo;ve discovered over the last half a decade, so based on that einstein quote from the start I imagine in another 5 years It\u0026rsquo;ll be twice as long as this!\nI\u0026rsquo;m not perfect, I\u0026rsquo;m far from it, I\u0026rsquo;m just a regular guy who decided to ramble on the internet after all.\nHope you enjoyed!\n","date":"22 February 2024","permalink":"/posts/half-a-decade-as-a-dev/","section":"Blog","summary":"I\u0026rsquo;ve now been a professional developer for longer than I was at University.","title":"Half a decade as a software developer in 5 minutes"},{"content":"Hi 👋 , I\u0026rsquo;m Matt, if you hadn\u0026rsquo;t of guessed.\nI\u0026rsquo;m a 27 year old software developer from the North West of England. As the tag on the front page says, I like software, systems, sports \u0026amp; simpsons. I\u0026rsquo;m still yet to find a scenario I can\u0026rsquo;t respond with a simpsons gif too.\nI\u0026rsquo;ve loved sport since I was kid, most side projects I\u0026rsquo;ve started in the last couple of years have been sport related. Mainly as of late my attempt at creating an FPL type MMA game, and creating an app which sends me an SMS over twilio with trending players being transferred in \u0026amp; out in standard FPL. I will write more on them individually in the future, I promise.\nIn the software development world, I\u0026rsquo;m a huge advocate for Test Driven Development. I\u0026rsquo;m also a big fan of improving the teams development process as much as possible, mainly by writing automated scripts or creating some tooling, we are developers after all. I\u0026rsquo;ve wrote PHP professionally for the last 5 years and compared to the majority of things you\u0026rsquo;d likely to read on the internet, I actually enjoy it.\n","date":null,"permalink":"/about/","section":"Home","summary":"Hi 👋 , I\u0026rsquo;m Matt, if you hadn\u0026rsquo;t of guessed.","title":"About Me"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]