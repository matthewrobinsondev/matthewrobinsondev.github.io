[{"content":" A little piece of insight into this mans brain, hopefully your IQ doesn\u0026rsquo;t drop too much after reading these. ","date":null,"permalink":"/posts/","section":"Blog","summary":"A little piece of insight into this mans brain, hopefully your IQ doesn\u0026rsquo;t drop too much after reading these.","title":"Blog"},{"content":"I\u0026rsquo;ve now been a professional developer for longer than I was at University. #Now that depressing statement is out of the way, I atually have some reflections \u0026amp; insights on those years I\u0026rsquo;d like to jot down.\nAlthough, before I go on, there\u0026rsquo;s a an Albert Einstein quote I\u0026rsquo;ve recently read \u0026amp; it rings very true.\n\u0026ldquo;The more I learn, the more I realise how much I don\u0026rsquo;t know.\u0026rdquo;\nIn the last 5 years, I\u0026rsquo;ve worked for two companies who couldn\u0026rsquo;t be further from each other in retrospect. I won\u0026rsquo;t go too much into it but my first had 7 Developers when I joined \u0026amp; second had 70+. That being said it was the one of the main points of me switching companies. I wanted to see the difference in organisation\u0026rsquo;s, the way the software teams work, the technology. Truth be told I\u0026rsquo;ve had great experiences from both \u0026amp; as you can tell, learnt quite a lot! often the hard way.\nTake a step back when explaining your work #Anytime I think of advice given to me in my career this is the by far the first thing that comes to my mind. Very early into my career I was given one piece of advice.\n\u0026ldquo;Everyone can write code, what will get you far is being able to explain the technical to the non-technical.\u0026rdquo;\nShout out James Ball\nAt the time, I was definitely confused by this. Everyone can code???\nThough as time passed it started to make more sense. People could complete tickets but when it came to explaining that work to shareholders, or product owner\u0026rsquo;s with questions, they wouldn\u0026rsquo;t be able to translate from the depths of the code to the reality of day to day use of said software.\nThey more than likely don\u0026rsquo;t know or even more likely don\u0026rsquo;t care how you\u0026rsquo;ve produced the goods, they just want a working product. You need to be able to explain to them, how things work, why development is going well, why it\u0026rsquo;s going bad \u0026amp; often estimating how long something will take.\nYou\u0026rsquo;re a programmer not a copywriter #Programming is fundamentally about solving problems.\nI think in the ever growing world of AI this is just as important as ever, although in the growing world of AI this post may not be relevant in 5 years. Critical thinking \u0026amp; problem solving are the most important skills in being a software developer in my opinion, if you quantify them they\u0026rsquo;d be required on every CV.\nCopying code from ChatGPT, Stack Overflow, Anywhere else without understanding what it does is just a recipe for disaster. You\u0026rsquo;re just trying to shove anything in to stop the leak, instead of thinking about the best way to solve the leak.\nI\u0026rsquo;ll draw on experience to help paint the picture, a month or two into my first job I was working on a type of integration into the platform that had been done over 10 times before. So it was a very simple structure to follow, I followed an example, wrote my tests, plugged in the new API connection, worked on transforming the data back into our data structure. All going swimmingly, right?\nWell I ran into an issue.\nI spent 2 days trying to get my tests to work or CLI run of the local integration to work but no look. I looked over every example I could find trying to see where I differed. I eventually spoke to my colleague who asked me \u0026ldquo;Have you followed the error?\u0026rdquo;, I replied \u0026ldquo;of course I have\u0026rdquo;, explained how it takes me to this line but all the other integrations use that so it\u0026rsquo;s can\u0026rsquo;t be that. It was that.\nHe then clicked through to the abstract everything was using \u0026amp; debugged, I sat there looking at this abstract logic like it was magic. He started to explain to me where it was going wrong \u0026amp; where to look. That\u0026rsquo;s when I found out, it wasn\u0026rsquo;t possible in the current system.\nTrying to understand the magic is where you truly start to figure out what\u0026rsquo;s going on, nothing magically works in software. In my case the system wasn\u0026rsquo;t built to handle whatever I was trying to do. I had to solve the problem that was in front of me, this new integration required a solution to the problem that I had to develop. I\u0026rsquo;d willingly bet my first solution was probably not what we went with, but it\u0026rsquo;s much easier to understand the solution when your being steer\u0026rsquo;d in it than dealing with more magic.\nPull Request comments aren\u0026rsquo;t a negative thing. #A lot of stigma around pull request comments tend to come from:\nComment = You\u0026rsquo;ve done something wrong. Feedback Fatigue - Dealing with a never ending sea of comments. How terrifying, not only have you done something wrong but everyone can publicly see that you\u0026rsquo;ve done something wrong. You might as well hand in your notice! Let\u0026rsquo;s address one by one shall we before you do that.\nA comment isn\u0026rsquo;t always to condemn, in recent months more than ever I leave comments on pull requests at work to understand the logic being applied. I want to understand why specific logic is being applied in places, It\u0026rsquo;s a conversation. There comments you have comment sections \u0026amp; discussions on most social media platforms, I\u0026rsquo;m not saying post your life story on them but they can be conversations.\nOn this from the flip side as well, be mindful of the tone of comments. In the age of teams \u0026amp; remote working gauging the tone of a comment is hard. For example, saying \u0026ldquo;Good approach however, have you considered X?\u0026rdquo; instead of \u0026ldquo;Why didn\u0026rsquo;t you do X?\u0026rdquo;, or \u0026ldquo;Do X.\u0026rdquo; without any resource or explanation on why that should be implemented, these can make a big difference I\u0026rsquo;ve found.\nLots of comments is always a favourite of mine, would you rather spend one extra day working on resolutions of bugs/edge cases someone may have spotted or move your ticket to done \u0026amp; then spend the next sprint on bug tickets for said issue? The number of comments don\u0026rsquo;t matter at the end of the day, once it\u0026rsquo;s merged, who even remembers? Don\u0026rsquo;t worry about it.\nHowever I will say one thing on this as Feedback Fatigue is a real thing unfortunately, not everything needs to be under such a microscope to the point of blocking a PR.\n","date":"22 February 2024","permalink":"/posts/half-a-decade-as-a-dev/","section":"Blog","summary":"I\u0026rsquo;ve now been a professional developer for longer than I was at University.","title":"Half a decades of lessons in 5 minutes."},{"content":"","date":null,"permalink":"/","section":"Home","summary":"","title":"Home"},{"content":"Use Stow for Your Dotfiles. Please. #Ever since I took an interest in dotfiles (I\u0026rsquo;m looking at you emacs \u0026amp; awesome wm.) and their magical ability to configure applications and tweak each little setting to my liking, I\u0026rsquo;ve been hooked. I spend more time configuring these tools than using them, in the true developer way.\nHowever, I always ran into one issue: I have multiple hard drives for different distros (and a consistent ability to break my machine.) and have never found a great way to manage my config files.\nIt\u0026rsquo;s funny because its true. I always had slightly different configs based on the machine I was on, due to the nature of tweaking as I go. Well, not anymore! Stow is incredible. I\u0026rsquo;ve been using it for a while now, and it\u0026rsquo;s made my life much easier.\nWell, What is Stow? # Stow is a powerful symlink farm manager that simplifies the task of managing and deploying software packages, especially useful for handling dotfiles across multiple machines.\nAs described by themselves:\nIt takes distinct packages of software and/or data located in separate directories on the filesystem and makes them appear to be installed in the same place.\nEssentially, you can control any file in your home diresctory, including dotfiles, from within one directory. Now it doesn\u0026rsquo;t sound amazing like that but think of all the clutter you remove, you can just focus on the files you want to maintaina and move around.\nFor example My dotfiles repo is just my zshrc, alacritty, tmux \u0026amp; neovim configs. I use these on 3 different machines though, I don\u0026rsquo;t care about moving anything else over so it removes the overhead of eveyrthing else in your .config which comes with your system of choice.\nCouple this with using Git to store all of your config files, and you can easily manage them all in one repository/directory. It\u0026rsquo;s bliss.\nSo, let\u0026rsquo;s get into setting it up!\nGuide #Step 1: Git and Stow #First things first: make sure you\u0026rsquo;ve got Git and Stow installed. Installing Stow is as easy as whispering sweet nothings into your terminal:\nsudo apt-get install stow # For Debian/Ubuntu brew install stow # For the macOS crowd, I believe And Git, well, if you haven\u0026rsquo;t got Git, I\u0026rsquo;m surprised you found this article.\nStep 2: Quick Setup #Kick things off by creating a dedicated Git repository for your dotfiles.\nmkdir ~/dotfiles cd ~/dotfiles git init Think of this new folder as your home directory, so you want to replicate its structure within the folder.\nIf you have your Alacritty config at\n~/.config/alacritty/alacritty.toml\nthen it should be the same, i.e.\n~/dotfiles/.config/alacritty/alacritty.toml.\nStep 3: Stow Away Your Treasures #While there are other methods, I found the easiest way was to move the configs I needed using something like mv to my dotfiles repository and then using stow .. This command sym-links your files back to their original locations in your dotfiles repository.\nStep 4: Commit to Git! #Now they\u0026rsquo;re all being managed in a non-hidden directory. Cool, but you don\u0026rsquo;t get the full benefit of this until you add Git into the mix. Pushing them to a remote repository means that no matter where you are, or how many times you\u0026rsquo;ve reinvented your machine, your personalised setup is just a few commands away.\ngit add . git commit -m \u0026#34;Behold, my dotfiles!\u0026#34; git remote add origin \u0026lt;remote-repository-url\u0026gt; git push -u origin master Now, if you make a change in ~/.config/alacritty/alacritty.toml, then when you go back to your dotfiles repo, you will see (with a good ole git status) that you can commit and manage those files with version control. This also lets you pull in any config changes from other machines at any time or revert your changes after breaking them!\nConclusion #I love Stow, and in tandem with Git, this is my preffered toolkit for managing dotfiles across multiple machines and systems. It provides a straightforward, reliable method to ensure your environment is always just the way you like it, no matter where you find yourself.\nIt\u0026rsquo;s easy, and it works. What more can you ask for?\nWant to know more? # Incredible video \u0026amp; aeshtetically pleasing video by Dreams of Autonomoy Stows Website previously linked Article I found searching for memes on dotfiles ","date":"19 February 2024","permalink":"/posts/using-stow/","section":"Blog","summary":"Use Stow for Your Dotfiles.","title":"Stow - Manage your dotfiles with ease."},{"content":"Hi 👋 , I\u0026rsquo;m Matt, if you hadn\u0026rsquo;t of guessed.\nI\u0026rsquo;m a 27 year old software developer from the North West of England. As the tag on the front page says, I like software, systems, sports \u0026amp; simpsons. I\u0026rsquo;m still yet to find a scenario I can\u0026rsquo;t respond with a simpsons gif too.\nI\u0026rsquo;ve loved sport since I was kid, most side projects I\u0026rsquo;ve started in the last couple of years have been sport related. Mainly as of late my attempt at creating an FPL type MMA game, and creating an app which sends me an SMS over twilio with trending players being transferred in \u0026amp; out in standard FPL. I will write more on them individually in the future, I promise.\nIn the software development world, I\u0026rsquo;m a huge advocate for Test Driven Development. I\u0026rsquo;m also a big fan of improving the teams development process as much as possible, mainly by writing automated scripts or creating some tooling, we are developers after all. I\u0026rsquo;ve wrote PHP professionally for the last 5 years and compared to the majority of things you\u0026rsquo;d likely to read on the internet, I actually enjoy it.\n","date":null,"permalink":"/about/","section":"Home","summary":"Hi 👋 , I\u0026rsquo;m Matt, if you hadn\u0026rsquo;t of guessed.","title":"About Me"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]